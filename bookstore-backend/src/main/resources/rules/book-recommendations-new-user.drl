package rules;

import com.example.bookstorebackend.book.Book;
import com.example.bookstorebackend.person.model.Author
import com.example.bookstorebackend.rating.model.Rating;
import com.example.bookstorebackend.genre.Genre;
import java.util.List;
import java.util.stream.Collectors
import java.util.Comparator
import java.util.ArrayList
import java.util.Collection
import com.example.bookstorebackend.utils.helpers.NewUserRecommendationHelper;

global java.util.ArrayList recommendedBooks;

rule "Remove Authors Without Books"
salience 30
no-loop
when
    $author: Author(getBookNumber() == 0)
then
    delete($author);
end

rule "Determine Author Genres"
lock-on-active
salience 25
no-loop
when
    $genre: Genre()
    $author: Author(getBookNumberFromGenre($genre) * 1.0 / getBooksLength() > 0.3)
then
    modify($author){addGenre($genre)}
end

rule "Populate Recommended Books"
salience 15
no-loop
when
    $authors: List(size > 0) from collect(Author(getGenresLength() > 0))
    $genres: List(size > 0) from collect(Genre())
    eval(NewUserRecommendationHelper.sortAuthors($authors))
    $books: List(size > 0) from collect(Book(getAuthor() memberOf $authors, getGenre() memberOf $genres))
then
    recommendedBooks.addAll(NewUserRecommendationHelper.sortBooks($books));
end
